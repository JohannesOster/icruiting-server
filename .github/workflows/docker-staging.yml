name: Docker Test, Build, Deploy - Staging

on:
  push:
    branches: ['docker']
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: johannesoster/icruiting-server
  CONTAINER: icruiting-server

jobs:
  test_and_build:
    name: Run tests and build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Tests
        run: docker compose --file docker-compose.test.yml up --abort-on-container-exit
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
  deploy:
    needs: [test_and_build]
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH connection
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Login to the GitHub Packages Docker Registry
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin"

      - name: Pull latest container
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

      - name: Stop deployed container
        continue-on-error: true
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker stop ${{ env.CONTAINER }}"

      - name: Remove deployed container
        continue-on-error: true
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker rm ${{ env.CONTAINER }}"

      - name: Start docker container
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker run -p 80:80 -d --name=${{ env.CONTAINER }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

      - name: Logout from the GitHub Packages Docker Registry
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker logout ${{ env.REGISTRY }}"
